The following steps are used to build and install the application in /cs/certified

Note that although the compilation in step #3 must use Java 17 (available on RHEL9, but not on 7), the
resulting jar file from the compilation produces compatible bytecode will not run on java 11 or newer.
Unfortunately, on ACE RHEL7, the default widely available Java runtime is version 8.  Therefore it is necessary 
to install a newer version of java on any RHEL7 system where this tool must run.

1.  On an RHEL9 dev workstation, change to a clean working directory and check
out the source code from github.

git clone https://github.com/JeffersonLab/logentrycli.git
cd logentrycli

2. (Recommended) Switch to a specific tagged version

# Use git tag to list available versions
git tag
# Checkout the one that is desired
git checkout v2.1

3. Compile/Build using gradle

# The special SSL certificates are need to operate through JLab intercepting proxy

./gradlew -Djavax.net.ssl.trustStore=/etc/pki/ca-trust/extracted/java/cacerts clean
./gradlew -Djavax.net.ssl.trustStore=/etc/pki/ca-trust/extracted/java/cacerts make

4. Recursively copy the contents of the bin and lib subdirectories to a suitable install location.

cp -r bin lib /cs/certified/apps/logentrycli/2.1/
chmod 555 /cs/certified/apps/logentrycli/2.1/bin/logentry


5. Perform a simply sanity test by making a minimalist log entry
# User executing the test must have a valid .elogcert
/cs/certified/apps/logentrycli/2.1/bin/logentry -t test -l TLOG


6.  Rotate the PRO link

cd /cs/certifieds/apps/logentrycli
rm PRO; ln -s 2.1 PRO

7. If necessary, create a symbolic link to the PRO wrapper script
from /usr/csite/certified/bin to the PRO version

cd  /usr/csite/certified/bin
ln -s  /cs/certified/apps/logentrycli/PRO/bin/logentry .


8. Test/Run on RHEL7
One can use the host devl77 where openjdk 18 has been installed as of this writing.

setenv JAVA_HOME /usr/lib/jvm/java-18-openjdk-18.0.2.1.9-1.rolling.el7.x86_64/
/cs/certified/apps/logentrycli/2.1/bin/logentry -t test -l TLOG

